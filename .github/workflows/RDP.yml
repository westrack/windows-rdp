name: RDP

on: [workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: üì• Download ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath .
        shell: powershell

      - name: üîë Configure ngrok authtoken
        run: .\ngrok.exe authtoken 2z96KQ5jwgrOv4cWaiQ7jmSJeh8_UpYhxpLiTy2Y4uFvcXNC
        shell: powershell

      - name: üë§ Create RDP user & enable Remote Desktop
        run: |
          net user RDPuser StrongPass123 /add
          net localgroup administrators RDPuser /add
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        shell: powershell

      - name: üöÄ Start ngrok tunnel in background
        run: |
          Start-Job -ScriptBlock {
            Start-Process "$PWD\ngrok.exe" -ArgumentList "tcp 3389" -NoNewWindow -WindowStyle Hidden
          }
          Start-Sleep -Seconds 10
        shell: powershell

      - name: üåê Get ngrok public URL
        run: |
          $retries = 0
          $found = $false
          while (-not $found -and $retries -lt 10) {
            try {
              $response = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
              if ($response.tunnels.Count -gt 0) {
                $rdp = $response.tunnels[0].public_url
                Write-Host "‚úÖ RDP Address: $rdp"
                Write-Host "üë§ User: RDPuser"
                Write-Host "üîê Password: StrongPass123"
                $found = $true
              }
            } catch {
              Start-Sleep -Seconds 3
              $retries++
            }
          }

          if (-not $found) {
            Write-Host "‚ùå Failed to get ngrok tunnel info. Is ngrok running?"
            exit 1
          }
        shell: powershell
